{"ast":null,"code":"export let checkObjectBoolValue = (object, expectedValue) => {\n  let res = true;\n\n  for (let key in object) {\n    if (object[key] !== expectedValue) {\n      res = false;\n      break;\n    }\n  }\n\n  return res;\n};\nexport let checkStringSize = (string, length, operator, equal) => {\n  let res = (() => {\n    switch (operator) {\n      case 'greater':\n        return equal ? string.length >= length : string.length > length;\n\n      case 'lesser':\n        return equal ? string.length <= length : string.length < length;\n\n      default:\n        return string.length === length;\n    }\n\n    ;\n  })();\n\n  return res;\n};\nexport let countDay = (dateStart, dateEnd) => {\n  let res = typeof dateEnd != 'undefined' ? dateEnd.getTime() - dateStart.getTime() : Date.now() - dateStart.getTime();\n  res = res / (1000 * 60 * 60 * 24);\n  return Math.floor(res);\n};\nexport let minTwoDigits = num => {\n  return (num < 10 ? '0' : '') + num;\n};\nexport let getFullDate = date => {\n  let year = date.getFullYear();\n  let month = minTwoDigits(date.getMonth() + 1);\n  let day = minTwoDigits(date.getDate() + 1);\n  return `${year}/${month}/${day}`;\n};\nexport let getFullTime = date => {\n  let second = minTwoDigits(date.getHours());\n  let minute = minTwoDigits(date.getMinutes());\n  let hour = minTwoDigits(date.getSeconds());\n  return `${second}:${minute}:${hour}`;\n};\nexport let getRect = el => {\n  return el.getBoundingClientRect();\n};\nexport let isMobile = () => {\n  return window.innerWidth <= 720;\n};\nexport let isEmail = str => {\n  //eslint-disable-next-line\n  return /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(str);\n};\nexport let isExternal = link => {\n  return link.split('/')[0] === (\"https:\" || \"http:\");\n};\nexport let containsHeb = str => {\n  return /[\\u0590-\\u05FF]/.test(str);\n};\nexport let isUndefined = element => {\n  return typeof element === 'undefined';\n};","map":{"version":3,"sources":["/home/ilan/Documents/Developement/Mes_projets/BlogWebJunior/client/src/common/utils.ts"],"names":["checkObjectBoolValue","object","expectedValue","res","key","checkStringSize","string","length","operator","equal","countDay","dateStart","dateEnd","getTime","Date","now","Math","floor","minTwoDigits","num","getFullDate","date","year","getFullYear","month","getMonth","day","getDate","getFullTime","second","getHours","minute","getMinutes","hour","getSeconds","getRect","el","getBoundingClientRect","isMobile","window","innerWidth","isEmail","str","test","isExternal","link","split","containsHeb","isUndefined","element"],"mappings":"AAAA,OAAO,IAAIA,oBAAoB,GAAG,CAACC,MAAD,EAAuCC,aAAvC,KAA2E;AACzG,MAAIC,GAAG,GAAG,IAAV;;AACA,OAAK,IAAIC,GAAT,IAAgBH,MAAhB,EAAwB;AACpB,QAAIA,MAAM,CAACG,GAAD,CAAN,KAAgBF,aAApB,EAAmC;AAC/BC,MAAAA,GAAG,GAAG,KAAN;AACA;AACH;AACJ;;AACD,SAAOA,GAAP;AACH,CATM;AAYP,OAAO,IAAIE,eAAe,GAAG,CAACC,MAAD,EAAiBC,MAAjB,EAAiCC,QAAjC,EAAqDC,KAArD,KAAkF;AAC3G,MAAIN,GAAG,GAAG,CAAC,MAAM;AACb,YAAQK,QAAR;AACI,WAAK,SAAL;AACI,eAAOC,KAAK,GAAGH,MAAM,CAACC,MAAP,IAAiBA,MAApB,GAA6BD,MAAM,CAACC,MAAP,GAAgBA,MAAzD;;AACJ,WAAK,QAAL;AACI,eAAOE,KAAK,GAAGH,MAAM,CAACC,MAAP,IAAiBA,MAApB,GAA6BD,MAAM,CAACC,MAAP,GAAgBA,MAAzD;;AACJ;AACI,eAAOD,MAAM,CAACC,MAAP,KAAkBA,MAAzB;AANR;;AAOC;AACJ,GATS,GAAV;;AAUA,SAAOJ,GAAP;AACH,CAZM;AAaP,OAAO,IAAIO,QAAQ,GAAG,CAACC,SAAD,EAAkBC,OAAlB,KAA6C;AAC/D,MAAIT,GAAG,GAAG,OAAQS,OAAR,IAAoB,WAApB,GAAkCA,OAAO,CAACC,OAAR,KAAoBF,SAAS,CAACE,OAAV,EAAtD,GAA4EC,IAAI,CAACC,GAAL,KAAaJ,SAAS,CAACE,OAAV,EAAnG;AACAV,EAAAA,GAAG,GAAIA,GAAG,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAV;AACA,SAAOa,IAAI,CAACC,KAAL,CAAWd,GAAX,CAAP;AACH,CAJM;AAMP,OAAO,IAAIe,YAAY,GAAIC,GAAD,IAAyB;AAC/C,SAAO,CAACA,GAAG,GAAG,EAAN,GAAW,GAAX,GAAiB,EAAlB,IAAwBA,GAA/B;AACH,CAFM;AAIP,OAAO,IAAIC,WAAW,GAAIC,IAAD,IAAwB;AAE7C,MAAIC,IAAI,GAAGD,IAAI,CAACE,WAAL,EAAX;AACA,MAAIC,KAAK,GAAGN,YAAY,CAAEG,IAAI,CAACI,QAAL,KAAkB,CAApB,CAAxB;AACA,MAAIC,GAAG,GAAGR,YAAY,CAAEG,IAAI,CAACM,OAAL,KAAiB,CAAnB,CAAtB;AACA,SAAS,GAAEL,IAAK,IAAGE,KAAM,IAAGE,GAAI,EAAhC;AACH,CANM;AAQP,OAAO,IAAIE,WAAW,GAAIP,IAAD,IAAwB;AAC7C,MAAIQ,MAAM,GAAGX,YAAY,CAACG,IAAI,CAACS,QAAL,EAAD,CAAzB;AACA,MAAIC,MAAM,GAAGb,YAAY,CAACG,IAAI,CAACW,UAAL,EAAD,CAAzB;AACA,MAAIC,IAAI,GAAGf,YAAY,CAACG,IAAI,CAACa,UAAL,EAAD,CAAvB;AAEA,SAAS,GAAEL,MAAO,IAAGE,MAAO,IAAGE,IAAK,EAApC;AACH,CANM;AAOP,OAAO,IAAIE,OAAO,GAAIC,EAAD,IAA8B;AAC/C,SAAOA,EAAE,CAACC,qBAAH,EAAP;AAEH,CAHM;AAIP,OAAO,IAAIC,QAAQ,GAAG,MAAe;AACjC,SAAOC,MAAM,CAACC,UAAP,IAAqB,GAA5B;AACH,CAFM;AAGP,OAAO,IAAIC,OAAO,GAAIC,GAAD,IAA0B;AAC3C;AACA,SAAQ,kCAAD,CAAqCC,IAArC,CAA0CD,GAA1C,CAAP;AACH,CAHM;AAIP,OAAO,IAAIE,UAAU,GAAIC,IAAD,IAA2B;AAC/C,SAAOA,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgB,CAAhB,OAAwB,YAAY,OAApC,CAAP;AACH,CAFM;AAGP,OAAO,IAAIC,WAAW,GAAIL,GAAD,IAA0B;AAC/C,SAAQ,iBAAD,CAAoBC,IAApB,CAAyBD,GAAzB,CAAP;AACH,CAFM;AAGP,OAAO,IAAIM,WAAW,GAAIC,OAAD,IAA2B;AAChD,SAAO,OAAOA,OAAP,KAAmB,WAA1B;AACH,CAFM","sourcesContent":["export let checkObjectBoolValue = (object: { [index: string]: boolean }, expectedValue: boolean): boolean => {\n    let res = true;\n    for (let key in object) {\n        if (object[key] !== expectedValue) {\n            res = false;\n            break;\n        }\n    }\n    return res;\n}\n\ntype operator = 'greater' | 'lesser' | 'equal';\nexport let checkStringSize = (string: string, length: number, operator: operator, equal?: boolean): boolean => {\n    let res = (() => {\n        switch (operator) {\n            case 'greater':\n                return equal ? string.length >= length : string.length > length;\n            case 'lesser':\n                return equal ? string.length <= length : string.length < length;\n            default:\n                return string.length === length;\n        };\n    })();\n    return res;\n}\nexport let countDay = (dateStart: Date, dateEnd?: Date): number => {\n    let res = typeof (dateEnd) != 'undefined' ? dateEnd.getTime() - dateStart.getTime() : Date.now() - dateStart.getTime();\n    res = (res / (1000 * 60 * 60 * 24));\n    return Math.floor(res);\n}\n\nexport let minTwoDigits = (num: number): string => {\n    return (num < 10 ? '0' : '') + num;\n}\n\nexport let getFullDate = (date: Date): string => {\n\n    let year = date.getFullYear();\n    let month = minTwoDigits((date.getMonth() + 1));\n    let day = minTwoDigits((date.getDate() + 1));\n    return (`${year}/${month}/${day}`);\n}\n\nexport let getFullTime = (date: Date): string => {\n    let second = minTwoDigits(date.getHours());\n    let minute = minTwoDigits(date.getMinutes());\n    let hour = minTwoDigits(date.getSeconds())\n\n    return (`${second}:${minute}:${hour}`);\n}\nexport let getRect = (el: HTMLElement): DOMRect => {\n    return el.getBoundingClientRect();\n\n}\nexport let isMobile = (): boolean => {\n    return window.innerWidth <= 720;\n}\nexport let isEmail = (str: string): boolean => {\n    //eslint-disable-next-line\n    return (/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/).test(str);\n}\nexport let isExternal = (link: string): boolean => {\n    return link.split('/')[0] === (\"https:\" || \"http:\");\n}\nexport let containsHeb = (str: string): boolean => {\n    return (/[\\u0590-\\u05FF]/).test(str);\n}\nexport let isUndefined = (element: any): boolean => {\n    return typeof element === 'undefined';\n}\n"]},"metadata":{},"sourceType":"module"}