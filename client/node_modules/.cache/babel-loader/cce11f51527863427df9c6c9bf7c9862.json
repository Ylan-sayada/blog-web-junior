{"ast":null,"code":"var _jsxFileName = \"/home/ilan/Documents/Developement/Mes_projets/WebJuniorBlog/client/blog-web-junior2/src/common/components/hoc/displayAfter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s((second, WrappedComponent) => {\n  _s();\n\n  const [isAppear, setIsAppear] = useState(false);\n  setTimeout(() => {\n    setIsAppear(true);\n  }, second * 1000);\n\n  const displayAfter = ({ ...props\n  }) => /*#__PURE__*/_jsxDEV(WrappedComponent, {\n    isAppear: isAppear,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 44\n  }, this);\n\n  displayAfter.propTypes = {\n    isAppear: PropTypes.bool\n  };\n  return displayAfter;\n}, \"NP7kwgCQGeHECE2/Evowt9oAtYk=\");","map":{"version":3,"sources":["/home/ilan/Documents/Developement/Mes_projets/WebJuniorBlog/client/blog-web-junior2/src/common/components/hoc/displayAfter.tsx"],"names":["React","useState","PropTypes","second","WrappedComponent","isAppear","setIsAppear","setTimeout","displayAfter","props","propTypes","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,kBAAe,CAACC,MAAD,EAAiBC,gBAAjB,KAA2C;AAAA;;AACtD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACAM,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFS,EAENH,MAAM,GAAG,IAFH,CAAV;;AAIA,QAAMK,YAAY,GAAG,CAAC,EAAE,GAAGC;AAAL,GAAD,kBAAkB,QAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEJ,QAA5B;AAAA,OAA0CI;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAvC;;AACAD,EAAAA,YAAY,CAACE,SAAb,GAAyB;AACrBL,IAAAA,QAAQ,EAAEH,SAAS,CAACS;AADC,GAAzB;AAIA,SAAOH,YAAP;AACH,CAZD","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nexport default (second: number, WrappedComponent: any) => {\n    const [isAppear, setIsAppear] = useState(false);\n    setTimeout(() => {\n        setIsAppear(true);\n    }, (second * 1000));\n\n    const displayAfter = ({ ...props }) => <WrappedComponent isAppear={isAppear} {...props} />\n    displayAfter.propTypes = {\n        isAppear: PropTypes.bool\n    };\n\n    return displayAfter;\n}\n"]},"metadata":{},"sourceType":"module"}